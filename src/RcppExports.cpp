// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// next_combination
unsigned int next_combination(IntegerVector x, unsigned int n);
RcppExport SEXP itercombin_next_combination(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP );
        unsigned int __result = next_combination(x, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// all_combinations
SEXP all_combinations(SEXP x_, unsigned int n, unsigned long long d);
RcppExport SEXP itercombin_all_combinations(SEXP x_SEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type x_(x_SEXP );
        Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP );
        Rcpp::traits::input_parameter< unsigned long long >::type d(dSEXP );
        SEXP __result = all_combinations(x_, n, d);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// next_multiset_combination
unsigned int next_multiset_combination(IntegerVector multiset, IntegerVector x);
RcppExport SEXP itercombin_next_multiset_combination(SEXP multisetSEXP, SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type multiset(multisetSEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP );
        unsigned int __result = next_multiset_combination(multiset, x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// all_multiset_combinations
SEXP all_multiset_combinations(IntegerVector multiset, SEXP x_, unsigned long long d);
RcppExport SEXP itercombin_all_multiset_combinations(SEXP multisetSEXP, SEXP x_SEXP, SEXP dSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type multiset(multisetSEXP );
        Rcpp::traits::input_parameter< SEXP >::type x_(x_SEXP );
        Rcpp::traits::input_parameter< unsigned long long >::type d(dSEXP );
        SEXP __result = all_multiset_combinations(multiset, x_, d);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// multichoose
unsigned long long multichoose(SEXP n);
RcppExport SEXP itercombin_multichoose(SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type n(nSEXP );
        unsigned long long __result = multichoose(n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// next_permutation
unsigned int next_permutation(IntegerVector x);
RcppExport SEXP itercombin_next_permutation(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP );
        unsigned int __result = next_permutation(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// all_permutations
SEXP all_permutations(SEXP x_, unsigned long long d);
RcppExport SEXP itercombin_all_permutations(SEXP x_SEXP, SEXP dSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type x_(x_SEXP );
        Rcpp::traits::input_parameter< unsigned long long >::type d(dSEXP );
        SEXP __result = all_permutations(x_, d);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// next_k_permutation
unsigned int next_k_permutation(IntegerVector x, unsigned int r);
RcppExport SEXP itercombin_next_k_permutation(SEXP xSEXP, SEXP rSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type r(rSEXP );
        unsigned int __result = next_k_permutation(x, r);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// all_k_permutations
SEXP all_k_permutations(SEXP x_, unsigned int r, unsigned long long d);
RcppExport SEXP itercombin_all_k_permutations(SEXP x_SEXP, SEXP rSEXP, SEXP dSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type x_(x_SEXP );
        Rcpp::traits::input_parameter< unsigned int >::type r(rSEXP );
        Rcpp::traits::input_parameter< unsigned long long >::type d(dSEXP );
        SEXP __result = all_k_permutations(x_, r, d);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
